<!--
Devices using this peripheral: 
      MKL02Z4
      MKL03Z4
      MKL04Z4
      MKL05Z4
      MKL14Z4
      MKL15Z4
      MKL16Z4
      MKL24Z4
      MKL25Z4
      MKL26Z4
      MKL34Z4
      MKL36Z4
      MKL46Z4
      MKM33Z5
      MKV10Z7
-->
      <peripheral>
         <?sourceFile "FTFA" ?>
         <name>FTFA</name>
         <description>Flash Memory Interface</description>
         <prependToName>FTFA</prependToName>
         <baseAddress>0x40020000</baseAddress>
         <size>32</size>
         <access>read-write</access>
         <resetValue>0x0</resetValue>
         <resetMask>0xFFFFFFFF</resetMask>
         <addressBlock>
            <?width "8" ?>
            <offset>0x0</offset>
            <size>0x14</size>
            <usage>registers</usage>
         </addressBlock>
         <registers>
            <register>
               <name>FSTAT</name>
               <description>Flash Status Register</description>
               <addressOffset>0x0</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>MGSTAT0</name>
                     <description>Memory Controller Command Completion Status Flag\n
The MGSTAT0 status flag is set if an error is detected during execution of a flash command or during the flash reset sequence. As a status flag, this bit cannot (and need not) be cleared by the user like the other error flags in this register</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No error detected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Error detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>FPVIOL</name>
                     <description>Flash Protection Violation Flag\n
The FPVIOL error bit indicates an attempt was made to program or erase an address in a protected area of program flash or data flash memory during a command write sequence or a write was attempted to a protected area of the FlexRAM while enabled for EEPROM. \n
While FPVIOL is set, the CCIF flag cannot be cleared to launch a command. The FPVIOL bit is cleared by writing a 1 to it. Writing a 0 to the FPVIOL bit has no effect</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No protection violation detected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Protection violation detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ACCERR</name>
                     <description>Flash Access Error Flag\n
The ACCERR error bit indicates an illegal access has occurred to a flash memory resource caused by a violation of the command write sequence or issuing an illegal flash command. \n
While ACCERR is set, the  CCIF flag cannot be cleared to launch a command. The ACCERR bit is cleared by writing a 1 to it. Writing a 0 to the ACCERR bit has no effect</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No access error detected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Access error detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>RDCOLERR</name>
                     <description>FTFL Read Collision Error Flag\n
Indicates that the MCU attempted a read from a flash memory resource that was being manipulated by a flash command (CCIF=0). Any simultaneous access is detected as a collision error by the block arbitration logic. The read data in this case cannot be guaranteed. \n
The flag is cleared by writing a 1 to it. Writing a 0 has no effect</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No collision error detected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Collision error detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>CCIF</name>
                     <description>Command Complete Interrupt Flag\n
Indicates that a flash command or EEPROM file system operation has completed. \n
The flag is cleared by writing a 1 to CCIF to launch a command. CCIF then stays low until command completion or command violation. \n
The flag is also cleared by a successful write to FlexRAM while enabled for EEE. CCIF then stays low until the EEPROM file system has created the associated EEPROM data record</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Command in progress</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Command has completed</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FCNFG</name>
               <description>Flash Configuration Register</description>
               <addressOffset>0x1</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>ERSSUSP</name>
                     <description>Erase Suspend\n
The ERSSUSP bit allows the user to suspend (interrupt) the Erase Flash Sector command while it is executing</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No suspend requested</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Suspend the current Erase Flash Sector command execution</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ERSAREQ</name>
                     <description>Erase All Request\n
This bit issues a request to the memory controller to execute the Erase All Blocks command and release security. This will:\n
Erase All Blocks\n
Verify the erased state\n
Program the Flash Configuration Field to the unsecure state (FSEC[SEC]=10)</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <access>read-only</access>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No request or request complete</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Writing 1 initiates request. When complete returns to 0</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>RDCOLLIE</name>
                     <description>Read Collision Error Interrupt Enable\n
The RDCOLLIE bit controls interrupt generation when a flash memory read collision error occurs</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Read collision error interrupt disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Read collision error interrupt enabled. An interrupt request is generated whenever an read collision error is detected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>CCIE</name>
                     <description>Command Complete Interrupt Enable\n
The CCIE bit controls interrupt generation when a flash command completes</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Command complete interrupt disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Command complete interrupt enabled. An interrupt request is generated whenever the FSTAT[CCIF] flag is set</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FSEC</name>
               <description>Flash Security Register</description>
               <addressOffset>0x2</addressOffset>
               <size>8</size>
               <access>read-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>SEC</name>
                     <description>Flash Security</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>MCU security status is secure</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>MCU security status is secure</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>MCU security status is unsecure (Device shipped in this state)</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>MCU security status is secure</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>FSLACC</name>
                     <description>Freescale Failure Analysis Access Code</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Freescale factory access granted</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Freescale factory access denied</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Freescale factory access denied</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Freescale factory access granted</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>MEEN</name>
                     <description>Mass Erase Enable Bits</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Mass erase is enabled</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Mass erase is enabled</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Mass erase is disabled</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Mass erase is enabled</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>KEYEN</name>
                     <description>Backdoor Key Security Enable</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Backdoor key access disabled</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Backdoor key access disabled (preferred KEYEN state to disable backdoor key access)</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Backdoor key access enabled</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Backdoor key access disabled</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>FOPT</name>
               <description>Flash Option Register\n
Usage is device dependent.\n
Refer to the device&apos;s Chip Configuration details for the definition and use of these bits</description>
               <addressOffset>0x3</addressOffset>
               <size>8</size>
               <access>read-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>OPT</name>
                     <description>Nonvolatile Option\n
These bits are loaded from flash to this register at reset</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <dim>12</dim>
               <dimIncrement>1</dimIncrement>
               <dimIndex>3:Flash address [7..0],2:Flash address [15..8],1:Flash address [23..16],0:FCMD (a code that defines the flash command),7:Data Byte 3,6:Data Byte 2,5:Data Byte 1,4:Data Byte 0,B:Data Byte 7,A:Data Byte 6,9:Data Byte 5,8:Data Byte 4</dimIndex>
               <name>FCCOB%s</name>
               <description>Flash Common Command Object Register %s - Usually %m\n
The FCCOB registers provides a command code and relevant parameters to the memory controller. Usage varies with command.\n
Some commands return information to the FCCOB registers when complete</description>
               <addressOffset>0x4</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>CCOB%s</name>
                     <description>%m</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <dim>4</dim>
               <dimIncrement>1</dimIncrement>
               <dimIndex>3:PROT[7..0],2:PROT[15..8],1:PROT[23..16],0:PROT[31..24]</dimIndex>
               <name>FPROT%s</name>
               <description>Program Flash Protection\n
Each program flash region can be protected from program and erase operations by setting the associated PROT bit.\n
In NVM Normal mode: The protection can only be increased.\n
In NVM Special mode: All bits of FPROT are writable without restriction.\n
Each bit in the 32-bit protection register represents 1/32 of the total program flash</description>
               <addressOffset>0x10</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>PROT</name>
                     <description>Program Flash Region Protect</description>
                     <bitOffset>0</bitOffset>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Program flash region is protected</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Program flash region is not protected</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
         </registers>
      </peripheral>
