<!--
Devices using this peripheral: 
      MK10D5
      MK10D7
      MK10D10
      MK10F12
      MK11D5
      MK12D5
      MK20D5
      MK20D7
      MK20D10
      MK20F12
      MK21D5
      MK21F12
      MK22D5
      MK22F12
      MK22F51212
      MK24F12
      MK30D7
      MK30D10
      MK40D7
      MK40D10
      MK50D7
      MK50D10
      MK51D7
      MK51D10
      MK52D10
      MK53D10
      MK60D10
      MK60F12
      MK60F15
      MK61F12
      MK61F15
      MK63F12
      MK64F12
      MK70F12
      MK70F15
      MKV10Z7
-->
      <peripheral>
         <?sourceFile "WDOG_MK" ?>
         <?preferredAccessWidth "16" ?>
         <name>WDOG</name>
         <description>Generation 2008 Watchdog Timer</description>
         <prependToName>WDOG</prependToName>
         <baseAddress>0x40052000</baseAddress>
         <size>32</size>
         <access>read-write</access>
         <resetValue>0x0</resetValue>
         <resetMask>0xFFFFFFFF</resetMask>
         <addressBlock>
            <?width "16" ?>
            <offset>0x0</offset>
            <size>0x18</size>
            <usage>registers</usage>
         </addressBlock>
         <registers>
            <register>
               <name>STCTRLH</name>
               <description>Status and Control Register High</description>
               <addressOffset>0x0</addressOffset>
               <size>16</size>
               <resetValue>0x1D3</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>WDOGEN</name>
                     <description>Enables or disables the WDOG&apos;s operation. In the disabled state, the watchdog timer is kept in the reset state, but the other exception conditions can still trigger a reset/interrupt. A change in the value of this bit must be held for more than one WDOG_CLK cycle for the WDOG to be enabled or disabled</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG is disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG is enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>CLKSRC</name>
                     <description>Selects clock source for the WDOG timer and other internal timing operations</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG clock sourced from LPO</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG clock sourced from alternate clock source</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>IRQRSTEN</name>
                     <description>Used to enable the debug breadcrumbs feature. A change in this bit is updated immediately, as opposed to updating after WCT</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG time-out generates reset only</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG time-out initially generates an interrupt. After WCT time, it generates a reset</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>WINEN</name>
                     <description>Enables Windowing mode</description>
                     <bitOffset>3</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Windowing mode is disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Windowing mode is enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ALLOWUPDATE</name>
                     <description>Enables updates to watchdog write-once registers, after the reset-triggered initial configuration window (WCT) closes, through unlock sequence</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No further updates allowed to WDOG write once</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG write once registers can be unlocked for updating</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>DBGEN</name>
                     <description>Enables or disables WDOG in Debug mode</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG is disabled in CPU Debug mode</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG is enabled in CPU Debug mode</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>STOPEN</name>
                     <description>Enables or disables WDOG in Stop mode</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG is disabled in CPU Stop mode</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG is enabled in CPU Stop mode</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>WAITEN</name>
                     <description>Enables or disables WDOG in Wait mode</description>
                     <bitOffset>7</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG is disabled in CPU Wait mode</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG is enabled in CPU Wait mode</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>TESTWDOG</name>
                     <description>Puts the watchdog in the functional test mode. In this mode the watchdog timer and the associated compare and reset generation logic is tested for correct operation. The clock for the timer is switched from the main watchdog clock to the fast clock input for watchdog functional test. The TESTSEL bit selects the test to be run</description>
                     <bitOffset>10</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
                  <field>
                     <name>TESTSEL</name>
                     <description>Selects the test to be run on the watchdog timer. Effective only if TESTWDOG is set</description>
                     <bitOffset>11</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Quick test. The timer runs in normal operation. You can load a small time-out value to do a quick test</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Byte test. Puts the timer in the byte test mode where individual bytes of the timer are enabled for operation and are compared for time-out against the corresponding byte of the programmed time-out value. Select the byte through BYTESEL[1:0] for testing</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>BYTESEL</name>
                     <description>This 2-bit field select the byte to be tested when the watchdog is in the byte test mode</description>
                     <bitOffset>12</bitOffset>
                     <bitWidth>2</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b00</name>
                           <description>Byte 0 selected</description>
                           <value>0b00</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b01</name>
                           <description>Byte 1 selected</description>
                           <value>0b01</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b10</name>
                           <description>Byte 2 selected</description>
                           <value>0b10</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b11</name>
                           <description>Byte 3 selected</description>
                           <value>0b11</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>DISTESTWDOG</name>
                     <description>Allows the WDOG&apos;s functional test mode to be disabled permanently. Once set, it can only be cleared by a reset. It cannot be unlocked for editing once it is set</description>
                     <bitOffset>14</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>WDOG functional test mode is not disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>WDOG functional test mode is disabled permanently until reset</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>STCTRLL</name>
               <description>Status and Control Register Low</description>
               <addressOffset>0x2</addressOffset>
               <size>16</size>
               <resetValue>0x1</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>INTFLG</name>
                     <description>Interrupt flag. It is set when an exception occurs. IRQRSTEN = 1 is a precondition to set this flag. INTFLG = 1 results in an interrupt being issued followed by a reset, WCT time later. The interrupt can be cleared by writing 1 to this bit. It also gets cleared on a system reset</description>
                     <bitOffset>15</bitOffset>
                     <bitWidth>1</bitWidth>
                  </field>
               </fields>
            </register>
            <register>
               <name>TOVAL</name>
               <description>Time-out Value Register High TOVALL:TOVALH</description>
               <addressOffset>0x4</addressOffset>
               <fields>
                  <field>
                     <name>TOVAL</name>
                     <description>Defines the 32-bit time-out value for the watchdog timer. It is defined in terms of cycles of the watchdog clock</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>TOVALH</name>
               <description>Time-out Value Register High</description>
               <addressOffset>0x4</addressOffset>
               <size>16</size>
               <resetValue>0x4C</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>TOVALHIGH</name>
                     <description>Defines the upper 16 bits of the 32-bit time-out value for the watchdog timer. It is defined in terms of cycles of the watchdog clock</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>TOVALL</name>
               <description>Time-out Value Register Low</description>
               <addressOffset>0x6</addressOffset>
               <size>16</size>
               <resetValue>0x4B4C</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>TOVALLOW</name>
                     <description>Defines the lower 16 bits of the 32-bit time-out value for the watchdog timer. It is defined in terms of cycles of the watchdog clock</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>WIN</name>
               <description>Window Register (WINL:WINH)</description>
               <addressOffset>0x8</addressOffset>
               <fields>
                  <field>
                     <name>WIN</name>
                     <description>Defines the 32-bit window for the windowed mode of operation of the watchdog. It is defined in terms of cycles of the watchdog clock. In this mode the watchdog can be refreshed only when the timer has reached a value greater than or equal to this window length. A refresh outside this window resets the system or if IRQRSTEN is set, it interrupts and then resets the system</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>WINH</name>
               <description>Window Register High</description>
               <addressOffset>0x8</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>WINHIGH</name>
                     <description>Defines the upper 16 bits of the 32-bit window for the windowed mode of operation of the watchdog. It is defined in terms of cycles of the watchdog clock. In this mode the watchdog can be refreshed only when the timer has reached a value greater than or equal to this window length. A refresh outside this window resets the system or if IRQRSTEN is set, it interrupts and then resets the system</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>WINL</name>
               <description>Window Register Low</description>
               <addressOffset>0xA</addressOffset>
               <size>16</size>
               <resetValue>0x10</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>WINLOW</name>
                     <description>Defines the lower 16 bits of the 32-bit window for the windowed mode of operation of the watchdog. It is defined in terms of cycles of the pre-scaled watchdog clock. In this mode, the watchdog can be refreshed only when the timer reaches a value greater than or equal to this window length value. A refresh outside this window resets the system or if IRQRSTEN is set, it interrupts and then resets the system</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>REFRESH</name>
               <description>Refresh Register</description>
               <addressOffset>0xC</addressOffset>
               <size>16</size>
               <resetValue>0xB480</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>WDOGREFRESH</name>
                     <description>Refresh register. A sequence of 0xA602 followed by 0xB480 within 20 bus clock cycles when written to this register, refreshes the WDOG and prevents it from resetting the system. Writing a value other than the above mentioned sequence or if the sequence is longer than 20 bus cycles, resets the system or if IRQRSTEN is set, it interrupts and then resets the system)</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>UNLOCK</name>
               <description>Unlock Register</description>
               <addressOffset>0xE</addressOffset>
               <size>16</size>
               <resetValue>0xD928</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>WDOGUNLOCK</name>
                     <description>You can write the unlock sequence values to this register to make the watchdog write once registers writable again. The required unlock sequence is 0xC520 followed by 0xD928 within 20 bus clock cycles. A valid unlock sequence opens up a window equal in length to the WCT within which you can update the registers. Writing a value other than the above mentioned sequence or if the sequence is longer than 20 bus cycles, resets the system or if IRQRSTEN is set, it interrupts and then resets the system). The unlock sequence is effective only if ALLOWUPDATE is set</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>TMROUT</name>
               <description>Timer Output Register (TMROUTL:TMROUTH)</description>
               <addressOffset>0x10</addressOffset>
               <fields>
                  <field>
                     <name>TIMEROUTHIGH</name>
                     <description>Shows the value of the upper 16 bits of the watchdog timer</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>TMROUTH</name>
               <description>Timer Output Register High</description>
               <addressOffset>0x10</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>TIMEROUTHIGH</name>
                     <description>Shows the value of the upper 16 bits of the watchdog timer</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>TMROUTL</name>
               <description>Timer Output Register Low</description>
               <addressOffset>0x12</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>TIMEROUTLOW</name>
                     <description>Shows the value of the lower 16 bits of the watchdog timer</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>RSTCNT</name>
               <description>Reset Count Register</description>
               <addressOffset>0x14</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>RSTCNT</name>
                     <description>Counts the number of times the watchdog resets the system. This register is reset only on a POR. Writing 1 to the bit to be cleared, enables you to clear the contents of this register</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>PRESC</name>
               <description>Prescaler Register</description>
               <addressOffset>0x16</addressOffset>
               <size>16</size>
               <resetValue>0x400</resetValue>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>PRESCVAL</name>
                     <description>3-bit prescaler for the watchdog clock source. A value of zero indicates no division of the input WDOG clock. The watchdog clock is divided by (PRESCVAL + 1) to provide the prescaled WDOG_CLK</description>
                     <bitOffset>8</bitOffset>
                     <bitWidth>3</bitWidth>
                  </field>
               </fields>
            </register>
         </registers>
      </peripheral>
