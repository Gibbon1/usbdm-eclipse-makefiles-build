<!--
Devices using this peripheral: 
      MK10D10
      MK20D10
      MK30D10
      MK40D10
      MK50D10
      MK51D10
      MK52D10
      MK53D10
      MK60D10
-->
      <peripheral>
         <?sourceFile "EWM_MK_1" ?>
         <name>EWM</name>
         <description>External Watchdog Monitor</description>
         <prependToName>EWM</prependToName>
         <baseAddress>0x40061000</baseAddress>
         <size>32</size>
         <access>read-write</access>
         <resetValue>0x0</resetValue>
         <resetMask>0xFFFFFFFF</resetMask>
         <addressBlock>
            <?width "8" ?>
            <offset>0x0</offset>
            <size>0x1</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x1</offset>
            <size>0x1</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x2</offset>
            <size>0x2</size>
            <usage>registers</usage>
         </addressBlock>
         <addressBlock>
            <?width "8" ?>
            <offset>0x5</offset>
            <size>0x1</size>
            <usage>registers</usage>
         </addressBlock>
         <registers>
            <register>
               <name>CTRL</name>
               <description>Control Register</description>
               <addressOffset>0x0</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>EWMEN</name>
                     <description>EWM enable\n
This bit when set, enables the EWM module</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>ASSIN</name>
                     <description>EWM_in&apos;s Assertion State Select\n
Default assert state of the EWM_in signal is logic zero (active low).\n
Setting ASSIN bit inverts the assert state to a logic one</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Active low</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Active high</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>INEN</name>
                     <description>Input Enable\n
This bit when set, enables the EWM_in port</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Input disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Input enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>INTEN</name>
                     <description>Interrupt Enable\n
This bit when set and EWM_out is asserted, an interrupt request is generated\n
To clear the interrupt request, user should clear this bit by writing 0</description>
                     <bitOffset>3</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Interrupt enabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Interrupt disabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
               </fields>
            </register>
            <register>
               <name>SERV</name>
               <description>Service Register\n
The EWM service mechanism requires the CPU to write two values to the SERV register:
\t- a first data byte of 0xB4, 
\t- followed by a second data byte of 0x2C</description>
               <addressOffset>0x1</addressOffset>
               <size>8</size>
               <access>write-only</access>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>SERVICE</name>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>CMPL</name>
               <description>Compare Low Register\n
Sets the minimum time for the CPU to service the EWM counter.\n
This register can be written only once after a CPU reset</description>
               <addressOffset>0x2</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>COMPAREL</name>
                     <description>Minimum</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>CMPH</name>
               <description>Compare High Register\n
Sets the maximum time for CPU to service the EWM counter.\n
This register can be written only once after a CPU reset</description>
               <addressOffset>0x3</addressOffset>
               <size>8</size>
               <resetValue>0xFF</resetValue>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>COMPAREH</name>
                     <description>Maximum</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>CLKPRESCALER</name>
               <description>Clock Prescaler Register\n
Divides the clock for running the EWM counter.\n
Prescaled clock frequency = low power clock source frequency/(1+CLK_DIV)
This register can be written only once after a CPU reset</description>
               <addressOffset>0x5</addressOffset>
               <size>8</size>
               <resetMask>0xFF</resetMask>
               <fields>
                  <field>
                     <name>CLK_DIV</name>
                     <description>Clock divider</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
         </registers>
      </peripheral>
