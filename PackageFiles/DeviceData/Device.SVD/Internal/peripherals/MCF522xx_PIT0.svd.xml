<!--
Devices using this peripheral: 
      MCF5223x
      MCF5225x
-->
      <peripheral>
         <?sourceFile "MCF522xx_PIT0" ?>
         <?preferredAccessWidth "16" ?>
         <name>PIT0</name>
         <description>Programmable Interrupt Timer\n
The PIT is a 16-bit timer that provides precise interrupts at regular intervals with minimal processor intervention. 
The timer can count down from the value written in the modulus register or it can be a free-running down-counter</description>
         <prependToName>PIT0</prependToName>
         <headerStructName>PIT</headerStructName>
         <baseAddress>0x40150000</baseAddress>
         <size>32</size>
         <access>read-write</access>
         <resetValue>0x0</resetValue>
         <resetMask>0xFFFFFFFF</resetMask>
         <addressBlock>
            <?width "16" ?>
            <offset>0x0</offset>
            <size>0x6</size>
            <usage>registers</usage>
         </addressBlock>
         <registers>
            <register>
               <name>PCSR</name>
               <description>Control and Status Register</description>
               <addressOffset>0x0</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>EN</name>
                     <description>PIT Enable\n
Enables PIT operation. When PIT is disabled, counter and prescaler are held in a stopped state</description>
                     <bitOffset>0</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Disabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>RLD</name>
                     <description>Reload action\n
The read/write reload bit enables loading the value of PMRn into PIT counter when the count reaches 0x0000</description>
                     <bitOffset>1</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Roll-over</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Reload</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>PIF</name>
                     <description>PIT interrupt flag\n
This read/write bit is set when PIT counter reaches 0x0000.\n
Clear PIF by writing a 1 to it or by writing to PMR</description>
                     <bitOffset>2</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>No interrupt</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Interrupt pending</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>PIE</name>
                     <description>PIT interrupt enable\n
This read/write bit enables PIF flag to generate interrupt requests</description>
                     <bitOffset>3</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Interrupt masked</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Interrupt enabled</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>OVW</name>
                     <description>Overwrite\n
Enables writing to PMRn to immediately overwrite the value in the PIT counter \n
otherwise this is delayed until when the counter reaches 0x0000</description>
                     <bitOffset>4</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Delayed</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Immediately</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>DBG</name>
                     <description>Debug mode operation\n
Controls the function of PIT in halted/debug mode.\n
During debug mode, register read and write accesses function normally.\n
When debug mode is exited, timer operation continues from the state it was in 
before entering debug mode, but any updates made in debug mode remain</description>
                     <bitOffset>5</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Enabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Stopped</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>DOZE</name>
                     <description>Doze Mode operation\n
The read/write DOZE bit controls the function of the PIT in doze mode. Reset clears DOZE</description>
                     <bitOffset>6</bitOffset>
                     <bitWidth>1</bitWidth>
                     <enumeratedValues>
                        <enumeratedValue>
                           <name>0b0</name>
                           <description>Enabled</description>
                           <value>0b0</value>
                        </enumeratedValue>
                        <enumeratedValue>
                           <name>0b1</name>
                           <description>Stopped</description>
                           <value>0b1</value>
                        </enumeratedValue>
                     </enumeratedValues>
                  </field>
                  <field>
                     <name>PRE</name>
                     <description>Prescaler\n
The read/write prescaler bits select the internal bus clock divisor to generate the PIT clock.\n
Divides by 2^N \n</description>
                     <bitOffset>8</bitOffset>
                     <bitWidth>4</bitWidth>
                  </field>
               </fields>
            </register>
            <register>
               <name>PMR</name>
               <description>Modulus Register\n
Contains the timer modulus value loaded into the PIT counter when the count reaches 0x0000 and the PCSRn[RLD] bit is set</description>
               <addressOffset>0x2</addressOffset>
               <size>16</size>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>PM</name>
                     <description>Timer modulus</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
            <register>
               <name>PCNTR</name>
               <description>Count Register\nContains the current counter value</description>
               <addressOffset>0x4</addressOffset>
               <size>16</size>
               <access>read-only</access>
               <resetMask>0xFFFF</resetMask>
               <fields>
                  <field>
                     <name>PC</name>
                     <description>Counter value\nShould be read as a 16-bit value</description>
                     <bitOffset>0</bitOffset>
                  </field>
               </fields>
            </register>
         </registers>
      </peripheral>
