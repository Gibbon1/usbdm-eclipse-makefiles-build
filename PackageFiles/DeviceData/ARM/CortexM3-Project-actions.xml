      <!-- Cortex-M3 
         NXP-LPC
	 STM32
       -->      
      <!-- GNU Build options Cortex M3 (e.g. lpc, stm) devices -->
      <projectActionList id="gnuSettings.cortex.m3" root="usbdm_resource_path/Stationery/ARM/" >
         <createFolder  target="Sources"                        type="" />
         <createFolder  target="Startup_Code"                   type="" />
         <createFolder  target="Project_Headers"                type="include" />
         <createFolder  target="Project_Settings/Linker_Files"  type="" />
         <projectOption id="net.sourceforge.usbdm.cdt.arm.toolchain.mcpu"              > <value>net.sourceforge.usbdm.cdt.arm.toolchain.mcpu.cortexM3</value> </projectOption>
         <projectOption id="net.sourceforge.usbdm.cdt.arm.toolchain.mthumb"            > <value>true</value> </projectOption>
         <projectOption id="net.sourceforge.usbdm.cdt.arm.toolchain.buildtools"        > <value>$(buildToolId)</value> </projectOption>
         <projectOption id="net.sourceforge.usbdm.cdt.toolchain.c.linker.linkerFile"   > <value>$(linkerFile)</value> </projectOption>
         <projectOption id="net.sourceforge.usbdm.cdt.toolchain.cpp.linker.linkerFile" > <value>$(linkerFile)</value> </projectOption>
         <projectOption id="gnu.c.link.option.paths" >                                   <value>&quot;${ProjDirPath}/Project_Settings/Linker_Files&quot;</value> </projectOption>
         <projectOption id="gnu.cpp.link.option.paths" >                                 <value>&quot;${ProjDirPath}/Project_Settings/Linker_Files&quot;</value> </projectOption>
      </projectActionList>

      <!-- Cortex-M3 CMSIS RTOS -->
      <projectActionList id="Cortex-M3-CMSIS" root="usbdm_resource_path/Stationery/ARM/" >
         <variable id="CMSIS-M3-rtos"  name="CMSIS RTOS framework"   description="Adds CMSIS-RTOS framework" />
         <condition variable="CMSIS-M3-rtos">
            <createFolder                                           target="cmsis"      type="include" />
            <copy           source="cmsis/Doc/index.html"           target="CMSIS.html" type="link" />
            <copy           source="cmsis/INC"                      target="cmsis/INC" />
            <copy           source="cmsis/SRC"                      target="cmsis/SRC" />
            <copy           source="cmsis/GCC/SVC_Table.S"          target="cmsis/GCC/SVC_Table.S" />
            <copy           source="cmsis/GCC/HAL_CM3.S"            target="cmsis/GCC/HAL_CM3.S" />
            <copy           source="Sources/RTX_Conf_CM.c"          target="Sources/RTX_Conf_CM.c" />
            <copy           source="Sources/RTX_Main.c"             target="Sources/main.c" />
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/cmsis/INC&quot;</value>
               <value>&quot;${ProjDirPath}/cmsis/SRC&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/cmsis/INC&quot;</value>
               <value>&quot;${ProjDirPath}/cmsis/SRC&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols" >
               <value>__CORTEX_M3</value>
               <value>__CMSIS_RTOS</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols" >
               <value>__CORTEX_M3</value>
               <value>__CMSIS_RTOS</value>
            </projectOption>            
         </condition>
      </projectActionList>

      <!-- Cortex-M3 STM32 CMSIS RTOS -->
      <projectActionList id="Cortex-STM32xx-CMSIS" root="usbdm_resource_path/Stationery/ARM/" >
         <variable id="CMSIS-STM32xx-rtos"  name="CMSIS RTOS framework"   description="Adds CMSIS-RTOS framework" />
         <condition variable="CMSIS-STM32xx-rtos">
            <createFolder                                           target="cmsis"      type="include" />
            <copy           source="cmsis/Doc/index.html"           target="CMSIS.html" type="link" />
            <copy           source="cmsis/INC"                      target="cmsis/INC" />
            <copy           source="cmsis/SRC"                      target="cmsis/SRC" />
            <copy           source="cmsis/GCC/SVC_Table.S"          target="cmsis/GCC/SVC_Table.S" />
            <copy           source="cmsis/GCC/HAL_CM3.S"            target="cmsis/GCC/HAL_CM3.S" />
            <copy           source="Sources/RTX_Conf_CM.c"          target="Sources/RTX_Conf_CM.c" />
            <copy           source="Sources/RTX_Main.c"             target="Sources/main.c" />
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/cmsis/INC&quot;</value>
               <value>&quot;${ProjDirPath}/cmsis/SRC&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/cmsis/INC&quot;</value>
               <value>&quot;${ProjDirPath}/cmsis/SRC&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols" >
               <value>__CORTEX_M3</value>
               <value>__CMSIS_RTOS</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols" >
               <value>__CORTEX_M3</value>
               <value>__CMSIS_RTOS</value>
            </projectOption>            
         </condition>
      </projectActionList>

      <!-- Base NXP-LPC files -->
      <projectActionList id="NXP-LPC-file-list" root="usbdm_resource_path/Stationery/ARM/" >
         <copy source="$(externalVectorTable)"                              target="Startup_Code/vectors.c" />
         <copy source="$(externalLinkerScript)"                             target="Project_Settings/Linker_Files//Custom.ld" />
         <copy source="$(externalHeaderFile)"                               target="Project_Headers/$(targetDevice).h" />
         <copy source="Startup_Code/system-lpc.c"                           target="Startup_Code/system.c" />
         <copy source="Startup_Code/vectors-lpc.c"                          target="Startup_Code/vectors.c" />
         <copy source="Startup_Code/newlib_stubs.c"                         target="Startup_Code/newlib_stubs.c" />
         <copy source="Project_Settings/Linker_Files/ARMLtd_GCC-rom-lpc.ld" target="Project_Settings/Linker_Files/ARMLtd_GCC-rom.ld" />
         <copy source="Project_Headers/derivative.h"                        target="Project_Headers/derivative.h" />
         <copy source="Project_Headers/TargetDevice.h"                      target="Project_Headers/$(targetDevice).h" />
         <copy source="Project_Headers/core_cm3.h"                          target="Project_Headers/core_cm3.h" />
         <copy source="Project_Headers/core_cmFunc.h"                       target="Project_Headers/core_cmFunc.h" />
         <copy source="Project_Headers/core_cmInstr.h"                      target="Project_Headers/core_cmInstr.h" />
      </projectActionList>

      <!-- Base STM32 files -->
      <projectActionList id="STM32F10xx-files" root="usbdm_resource_path/Stationery/ARM/" >
         <copy source="$(externalVectorTable)"                                   target="Startup_Code/vectors.c" />
         <copy source="$(externalLinkerScript)"                                  target="Project_Settings/Linker_Files/Custom.ld" />
         <copy source="$(externalHeaderFile)"                                    target="Project_Headers/$(targetDevice).h" />
         <copy source="Startup_Code/system-stm32f10x.c"                          target="Startup_Code/system.c" />
         <copy source="Startup_Code/vectors-stm32.c"                             target="Startup_Code/vectors.c" />
         <copy source="Startup_Code/newlib_stubs.c"                              target="Startup_Code/newlib_stubs.c" />
         <copy source="Startup_Code/startup_ARMLtdGCC_CortexM3.S"                target="Startup_Code/startup_ARMLtdGCC.S" />
         <copy source="Project_Settings/Debug.launch"                            target="Project_Settings/$(projectName)-Debug.launch" />
         <copy source="Project_Settings/Linker_Files/ARMLtd_GCC-rom-stm32.ld"    target="Project_Settings/Linker_Files/ARMLtd_GCC-rom.ld" />
         <copy source="Project_Settings/Linker_Files/MemoryMap.ld"               target="Project_Settings/Linker_Files/MemoryMap-$(targetDeviceName).ld" />
         <copy source="Project_Headers/derivative-STM32xx.h"                     target="Project_Headers/derivative.h" />
         <copy source="Project_Headers/core_cm3.h"                               target="Project_Headers/core_cm3.h" />
         <copy source="Project_Headers/core_cmFunc.h"                            target="Project_Headers/core_cmFunc.h" />
         <copy source="Project_Headers/core_cmInstr.h"                           target="Project_Headers/core_cmInstr.h" />
         <copy source="Project_Headers/stm32f10x.h"                              target="Project_Headers/stm32f10x.h" />
         <copy source="Project_Headers/system_stm32f10x.h"                       target="Project_Headers/system_stm32f10x.h" />
         <copy source="Project_Headers/utilities-stm32.h"                        target="Project_Headers/utilities.h" />
         <copy source="Sources/main.c"                                           target="Sources/main.c" />
           <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols" >
              <value>STM32F10X_LD</value>
           </projectOption>            
           <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols" >
              <value>STM32F10X_LD</value>
           </projectOption>            
      </projectActionList>

      <!-- Additions for STM32xx SPL -->
      <projectActionList id="STM32-spl-files" root="usbdm_resource_path/Stationery/ARM/" >
         <variable id="STM32-spl" name="Standard Peripheral Library"      description="Adds code for the STM32 Standard peripheral Library - check assumptions made" />
         <condition variable="STM32-spl" >
           <createFolder                                              target="spl"          type="include" />
           <copy source="spl/inc"                                     target="spl/inc" />
           <copy source="spl/src"                                     target="spl/src" />
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/spl/inc&quot;</value>
               <value>&quot;${ProjDirPath}/spl/src&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths" >
               <value>&quot;${ProjDirPath}/spl/inc&quot;</value>
               <value>&quot;${ProjDirPath}/spl/src&quot;</value>
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols" >
               <value>USE_STDPERIPH_DRIVER</value>      
            </projectOption>            
            <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols" >
               <value>USE_STDPERIPH_DRIVER</value>
            </projectOption>            
         </condition>
      </projectActionList>
      
      <projectActionList id="STM32Fxxx-ProjectActions" >
         <projectActionListRef  ref="gnuSettings.cortex.m3" />
         <projectActionListRef  ref="Cortex-STM32xx-CMSIS" />
         <projectActionListRef  ref="STM32-spl-files" />
         <projectActionListRef  ref="STM32F10xx-files" />
      </projectActionList>

